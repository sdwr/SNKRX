
Game loop:
    in main.lua, calls State:update() and State:draw() 
    in battle that = Arena:update() and Arena:draw()
    out of battle = BuyScreen:update() and BuyScreen:draw()

Globals in main.lua
    - colors
    - sounds
    - lookup tables
    - global vars

Units/Effects are GameObjects, have 
    init()
        called once on creation, should set stats
    update()
        called every frame, should update velocity/position with Physics:update_game_object(), also sets target, updates stats for temporary buffs
    draw()
        draws to screen every frame

    -what happens when =dead is set on GameObject, not Unit?
    -looks like it is still garbage collected, is used for UI elements

    Unit classes being used are 
        - Troop for player units
            .character is unit type
        - Seeker for enemies
            .type is enemy type
        - Critter for necro skeletons

        - implements Physics for movement and collision
            collision handled by Group, all collidable objects are in main Group, set in Arena:on_enter()
        - get cleaned up in global update when set to dead (self.dead = true)
        - have aggro range and attack range

Spells are stored in Player class
    ex. ChainLightning, Stomp, Summon

--------------
TO ADD A UNIT:
--------------
    needs to be added to all the lookup tables in main.lua (or game crashes when they show up in the BuyScreen)
    if you want custom movement, goes in :update()
    add attack:
        player unit: 
            add elseif in Troop:set_character()
        enemy unit:
            add 2 elseifs in Seeker:init()
            add to Arena:on_enter() to spawn
                ( spawn_n_enemies() or spawn_n_rares() )


Attacks and timers handled via Triggers
    - duplicated for every unit type (target handling split between init and update)

    -most attacks/spells are set as Trigger:cooldown() in unit's :init()
    -uses unit.state property to stop units during cast-time + backswing
        .state = 'normal', can move freely
        .state = 'frozen', can't move, in casting animation
        .state = 'stopped', doesn't move automatically, can be rallied (like backswing in RTS)

    -some numbers hardcoded, they *should* be in globals in main.lua
        ex. attack_speeds

Enemy spawns are in Arena:on_enter()


------------------
Combat Triggers
-----------------
For a proper item system, we need consistent triggers
Some attack hitboxes are:
    - Area on the ground
    - instant hitscan (where??)
    - Missile (spell object that moves, maybe explode on contact)

When a unit takes damage we need to know:
    - which character initiated the attack (NOT the damaging entity)
    - if this is the primary target or not (items should only proc once per attack)

so :onhit callback that returns to character
and :onkill callback that returns to character

Items have procs, and those procs can be:
    - on attack (cast chain lightning)
        - note that on attack still requires hit confirmation, but doesn't 
        proc multiple times per enemy hit
        - can put a var on unit, reset on attack, only first :onhitcallback triggers
    - on hit (slow enemy, inflict poison, vamp)
    - on being hit (thorns)
    - on hp threshold (second wind)
    - on enemy hp threshold (culling strike)
    - over time (shield every 5 seconds)
    - at time (bloodlust on start of round)

and also probably shouldn't proc each other

and can require access to:
    - the owner
    - the target
    - nearby allies/enemies potentially

right now, thorns/vamp are on the Unit, and use the unit :onhitcallback()
bash is a Unit buff
and lightning is a proc

the proc loading system is good (info on item, load onto unit at start of round)
and allows for item memory

need a distinction between cast abilities and secondary?
    - for onhit + procs procing procs

but what about combinations of items?
    doubles elemental damage + lightning proc
        - +eledmg is a unit stat, the lightning proc checks it on activate
    
    shield every 5 seconds + your cds are 20% faster
        - nextShield is a buff(?), and its dt is * by fasterCds

    all your lighning damage slows + all your slow damage reduces aspd
        - need elemental dmg types
        - need unit source on all :hit()
        - to go back and calculate attack bonuses
        - can put in Check_On_Hit_Procs, just need to add dmg type to :hit()


-------------
Unit Stats/Items/Procs
------------
all happens in objects.lua Unit:calculate_stats()

- sets base stats (different per unit type :( )
- sets status resist
- sets procs

- sets enemy class stats
- sets self buffs 
- sets self item buffs
- sets troop unit mults

- sets all stats using buffs

buffs are calculated in same file
but only player calls update_buffs?




